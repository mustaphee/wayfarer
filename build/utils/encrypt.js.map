{"version":3,"sources":["../../src/utils/encrypt.js"],"names":["hashPassword","password","bcrypt","hash","hashedPassword","checkPassword","plaintextPassword","hashPass","compare","match"],"mappings":";;;;;;;AAAA;;;;;;;;AAEO,IAAMA,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGC,mBAAOC,IAAP,CAAYF,QAAZ,EAAsB,EAAtB,CADH;;AAAA;AACpBG,YAAAA,cADoB;AAAA,6CAEnBA,cAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZJ,YAAY;AAAA;AAAA;AAAA,GAAlB;;;;AAKA,IAAMK,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,iBAAP,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPL,mBAAOM,OAAP,CAAeF,iBAAf,EAAkCC,QAAlC,CADO;;AAAA;AACrBE,YAAAA,KADqB;AAAA,8CAEpBA,KAFoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbJ,aAAa;AAAA;AAAA;AAAA,GAAnB","sourcesContent":["import bcrypt from 'bcrypt';\n\nexport const hashPassword = async (password) => {\n  const hashedPassword = await bcrypt.hash(password, 10);\n  return hashedPassword;\n};\n\nexport const checkPassword = async (plaintextPassword, hashPass) => {\n  const match = await bcrypt.compare(plaintextPassword, hashPass);\n  return match;\n};\n"],"file":"encrypt.js"}